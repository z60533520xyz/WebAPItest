// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPItest.Data;

namespace WebAPItest.Migrations
{
    [DbContext(typeof(WebAPItestContext))]
    partial class WebAPItestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAPItest.Models.BenIdInformation", b =>
                {
                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("BenAddrM")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BenId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("BenName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BenPhone")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<decimal>("BenProportion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BenSeq")
                        .HasColumnType("int");

                    b.Property<string>("BenZipM")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Guid");

                    b.ToTable("BenIdInformation");
                });

            modelBuilder.Entity("WebAPItest.Models.IdInformation", b =>
                {
                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("EngName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("IdAreaM")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<DateTime>("IdBirthday")
                        .HasColumnType("date");

                    b.Property<string>("IdCityM")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("IdDeclarationOFGuardian")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("IdEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("IdJobClass")
                        .HasColumnType("int");

                    b.Property<string>("IdSex")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("IdZipM")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("IdaddrM")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Idname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("IdtelH")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("IdtelMv")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("Passport")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PolicyOtherMM")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("PolicyPregnancy")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Relation")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Guid");

                    b.ToTable("IdInformation");
                });

            modelBuilder.Entity("WebAPItest.Models.PayIdInformation", b =>
                {
                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("Agency")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ApplyNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<DateTime>("DueDt")
                        .HasColumnType("date");

                    b.Property<string>("Englishpolicy")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("InsType")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("LocationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("Medium")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PayId")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("PayIdAddrM")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PayIdAreaM")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<DateTime>("PayIdBirthday")
                        .HasColumnType("date");

                    b.Property<string>("PayIdCityM")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("PayIdEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PayIdName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PayIdSex")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("PayIdTelH")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("PayIdTelMv")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("PayIdZipM")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("SendType")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("TotInv")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<DateTime>("TravelDateEnd")
                        .HasColumnType("date");

                    b.Property<DateTime>("TravelDateFrom")
                        .HasColumnType("date");

                    b.Property<string>("TravelDateHour")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("Guid");

                    b.ToTable("PayIdInformation");
                });

            modelBuilder.Entity("WebAPItest.Models.Product", b =>
                {
                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ProdCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Guid");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("WebAPItest.Models.SendApiRequest", b =>
                {
                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Agency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplyNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenAddrM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BenProportion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BenSeq")
                        .HasColumnType("int");

                    b.Property<string>("BenZipM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDt")
                        .HasColumnType("date");

                    b.Property<string>("EngName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Englishpolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdAreaM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IdBirthday")
                        .HasColumnType("date");

                    b.Property<string>("IdCityM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdDeclarationOFGuardian")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdJobClass")
                        .HasColumnType("int");

                    b.Property<string>("IdSex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdZipM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdaddrM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Idname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdtelH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdtelMv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medium")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayIdAddrM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayIdAreaM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PayIdBirthday")
                        .HasColumnType("date");

                    b.Property<string>("PayIdCityM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayIdEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayIdName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayIdSex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayIdTelH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayIdTelMv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayIdZipM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyOtherMM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyPregnancy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SendType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotInv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TravelDateEnd")
                        .HasColumnType("date");

                    b.Property<DateTime>("TravelDateFrom")
                        .HasColumnType("date");

                    b.Property<string>("TravelDateHour")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Guid");

                    b.ToTable("SendApiRequest");
                });

            modelBuilder.Entity("WebAPItest.Models.BenIdInformation", b =>
                {
                    b.HasOne("WebAPItest.Models.PayIdInformation", "PayIdInformation")
                        .WithOne("BenIdInformation")
                        .HasForeignKey("WebAPItest.Models.BenIdInformation", "Guid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAPItest.Models.IdInformation", b =>
                {
                    b.HasOne("WebAPItest.Models.PayIdInformation", "PayIdInformation")
                        .WithOne("IdInformation")
                        .HasForeignKey("WebAPItest.Models.IdInformation", "Guid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAPItest.Models.Product", b =>
                {
                    b.HasOne("WebAPItest.Models.PayIdInformation", "PayIdInformation")
                        .WithOne("Product")
                        .HasForeignKey("WebAPItest.Models.Product", "Guid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
